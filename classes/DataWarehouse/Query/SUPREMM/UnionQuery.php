<?php

namespace DataWarehouse\Query\SUPREMM;

use CCR\DB;

/**
 *
 * @author Ryan Rathsam
 * @date 6/23/15
 */
class UnionQuery extends RawData
{

    private $queries = null;

    public function __construct(
        $aggregation_unit_name,
        $start_date,
        $end_date,
        $group_by,
        $queries = array(),
        $stat = 'jl.jobid',
        array $parameters = array()
    )
    {
        $this->queries = $queries;
        parent::__construct($aggregation_unit_name, $start_date, $end_date, $group_by, $stat, $parameters); // TODO: Change the autogenerated stub
    }

    public function getCountQueryString()
    {
        return parent::getCountQueryString();
    }


    public function getQueryString($limit = NULL, $offset = NULL, $extraHavingClause = NULL)
    {
        if (isset($this->queries)) {

            $result = array();
            if (!$this->selectFieldsAreValid()) throw new \Exception('All queries must have the same number of select fields.');

            foreach ($this->queries as $query) {
                array_push($result, $query->getQueryString(NULL, NULL, $extraHavingClause));
            }
            $combined = implode("\n union \n", $result);
            $query = "SELECT uq.* FROM ($combined) AS uq";
            if (isset($extraHavingClause)) {
                $query .= "\nHAVING " . $extraHavingClause . "\n";
            }
            if (isset($limit) && !isset($offset)) {
                $query .= "\n" . "LIMIT $limit" . "\n";
            }
            if (isset($limit) && isset($offset)) {
                $query .= "\n" . "LIMIT $limit" . "\t" . "OFFSET $offset" . "\n";
            }
            return $query;
        }
        return null;
    }

    protected function selectFieldsAreValid()
    {
        $result = true;
        if (isset($this->queries)) {
            $length = null;
            foreach ($this->queries as $query) {
                $selectFields = $query->getSelectFields();
                if ($length == null) {
                    $length = isset($selectFields) ? count($selectFields) : $length;
                } else if (count($selectFields) != $length) {
                    $result = false;
                    break;
                }
            }
        }
        return $result;
    }
}
